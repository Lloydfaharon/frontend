{"ast":null,"code":"var _jsxFileName = \"/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/Store/index';\nimport { login, userProfile } from './redux/actions/all.actions';\nimport { useNavigate } from 'react-router-dom'; // Importez useNavigate depuis react-router-dom\n\n// Fonction asynchrone pour effectuer la connexion instantanée\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst connectInstantly = async () => {\n  // Démarrer l'action userProfile dès le début de l'application\n  store.dispatch(userProfile());\n\n  // Vérifier si le token existe dans le localStorage\n  const token = localStorage.getItem('token');\n  if (token) {\n    // Si le token existe, déclencher l'action de connexion avec ce token\n    store.dispatch(login());\n    // Rediriger vers la page du profil une fois la connexion établie\n    navigate('/profil');\n  }\n};\n\n// Assignez la fonction navigate à la variable navigate\nconst navigate = useNavigate();\n\n// Appeler la fonction pour effectuer la connexion instantanée\nconnectInstantly();\n\n// Rendu de l'application\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 3\n}, this));\n\n// Si vous souhaitez mesurer les performances de votre application, vous pouvez utiliser reportWebVitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","Provider","store","login","userProfile","useNavigate","jsxDEV","_jsxDEV","connectInstantly","dispatch","token","localStorage","getItem","navigate","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/Store/index';\nimport { login, userProfile } from './redux/actions/all.actions';\nimport { useNavigate } from 'react-router-dom'; // Importez useNavigate depuis react-router-dom\n\n// Fonction asynchrone pour effectuer la connexion instantanée\nconst connectInstantly = async () => {\n  // Démarrer l'action userProfile dès le début de l'application\n  store.dispatch(userProfile());\n\n  // Vérifier si le token existe dans le localStorage\n  const token = localStorage.getItem('token');\n  if (token) {\n    // Si le token existe, déclencher l'action de connexion avec ce token\n    store.dispatch(login());\n    // Rediriger vers la page du profil une fois la connexion établie\n    navigate('/profil');\n  }\n};\n\n// Assignez la fonction navigate à la variable navigate\nconst navigate = useNavigate();\n\n// Appeler la fonction pour effectuer la connexion instantanée\nconnectInstantly();\n\n// Rendu de l'application\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// Si vous souhaitez mesurer les performances de votre application, vous pouvez utiliser reportWebVitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,aAAa;AAEpB,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AACA,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,KAAK,EAAEC,WAAW,QAAQ,6BAA6B;AAChE,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACnC;EACAN,KAAK,CAACO,QAAQ,CAACL,WAAW,CAAC,CAAC,CAAC;;EAE7B;EACA,MAAMM,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACT;IACAR,KAAK,CAACO,QAAQ,CAACN,KAAK,CAAC,CAAC,CAAC;IACvB;IACAU,QAAQ,CAAC,SAAS,CAAC;EACrB;AACF,CAAC;;AAED;AACA,MAAMA,QAAQ,GAAGR,WAAW,CAAC,CAAC;;AAE9B;AACAG,gBAAgB,CAAC,CAAC;;AAElB;AACA,MAAMM,IAAI,GAAGhB,QAAQ,CAACiB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTX,OAAA,CAACV,KAAK,CAACsB,UAAU;EAAAC,QAAA,eACfb,OAAA,CAACN,QAAQ;IAACC,KAAK,EAAEA,KAAM;IAAAkB,QAAA,eACrBb,OAAA,CAACR,GAAG;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACK,CACpB,CAAC;;AAED;AACAxB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}