{"ast":null,"code":"import axios from 'axios';\n\n//SIGN IN\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\n//user profile\nexport const GET_USERPROFILE = \"GET_USERPROFILE\";\nexport const EDIT_USERNAME = \"EDIT_USERNAME\";\n\n/* Authentication actions */\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:3001/api/v1/user/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data\n    });\n    dispatch(userProfile(data.body.token));\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n/* User data recovery action */\nexport const userProfile = userData => {\n  return {\n    type: GET_USERPROFILE,\n    payload: userData\n  };\n};\n\n/* Username update action */\nexport const updateUsername = username => {\n  return {\n    type: EDIT_USERNAME,\n    payload: username\n  };\n};","map":{"version":3,"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_USERPROFILE","EDIT_USERNAME","login","email","password","dispatch","config","headers","data","post","type","payload","userProfile","body","token","error","response","message","userData","updateUsername","username"],"sources":["/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/redux/actions/login.actions.js"],"sourcesContent":["import axios from 'axios';\n\n\n//SIGN IN\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\n//user profile\nexport const GET_USERPROFILE = \"GET_USERPROFILE\"\nexport const EDIT_USERNAME = \"EDIT_USERNAME\"\n\n\n\n/* Authentication actions */\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n      const config = {\n        headers: {\n          'Content-type': 'application/json',\n        },\n      }\n  \n      const { data } = await axios.post(\n        'http://localhost:3001/api/v1/user/login',\n        { email, password },\n        config\n      )\n  \n      dispatch({ type: LOGIN_SUCCESS, payload: data })\n      dispatch(userProfile(data.body.token))\n    } catch (error) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      })\n    }\n  }\n\n\n/* User data recovery action */\nexport const userProfile = (userData) => {\n    return {\n        type: GET_USERPROFILE,\n        payload: userData,\n    }\n}\n\n/* Username update action */\nexport const updateUsername = (username) => {\n    return {\n        type: EDIT_USERNAME,\n        payload: username,\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAGzB;AACA,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,MAAM,GAAG,QAAQ;;AAE9B;AACA,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAChD,OAAO,MAAMC,aAAa,GAAG,eAAe;;AAI5C;;AAEA,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACF,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAC/B,yCAAyC,EACzC;MAAEN,KAAK;MAAEC;IAAS,CAAC,EACnBE,MACF,CAAC;IAEDD,QAAQ,CAAC;MAAEK,IAAI,EAAEb,aAAa;MAAEc,OAAO,EAAEH;IAAK,CAAC,CAAC;IAChDH,QAAQ,CAACO,WAAW,CAACJ,IAAI,CAACK,IAAI,CAACC,KAAK,CAAC,CAAC;EACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdV,QAAQ,CAAC;MACPK,IAAI,EAAEZ,UAAU;MAChBa,OAAO,EACLI,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;;AAGH;AACA,OAAO,MAAML,WAAW,GAAIM,QAAQ,IAAK;EACrC,OAAO;IACHR,IAAI,EAAEV,eAAe;IACrBW,OAAO,EAAEO;EACb,CAAC;AACL,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAIC,QAAQ,IAAK;EACxC,OAAO;IACHV,IAAI,EAAET,aAAa;IACnBU,OAAO,EAAES;EACb,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}