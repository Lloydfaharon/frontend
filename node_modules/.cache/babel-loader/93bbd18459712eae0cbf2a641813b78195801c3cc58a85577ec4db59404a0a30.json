{"ast":null,"code":"var _jsxFileName = \"/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/Store/index';\nimport { login, userProfile } from './redux/actions/all.actions';\nimport { useNavigate } from 'react-router-dom'; // Importez useNavigate depuis react-router-dom\n\n// Fonction asynchrone pour effectuer la connexion instantanée\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst connectInstantly = async () => {\n  // Démarrer l'action userProfile dès le début de l'application\n  store.dispatch(userProfile());\n\n  // Vérifier si le token existe dans le localStorage\n  const token = localStorage.getItem('token');\n  if (token) {\n    // Si le token existe, déclencher l'action de connexion avec ce token\n    store.dispatch(login());\n  }\n};\n\n// Rendu de l'application\nconst renderApp = () => {\n  _s();\n  const navigate = useNavigate(); // Appel de useNavigate à l'intérieur de la fonction de rendu\n\n  useEffect(() => {\n    connectInstantly(); // Appeler la fonction pour effectuer la connexion instantanée\n    // Rediriger vers la page du profil une fois la connexion établie\n    navigate('/profil');\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n// Rendu de l'application\n_s(renderApp, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(renderApp());\n\n// Si vous souhaitez mesurer les performances de votre application, vous pouvez utiliser reportWebVitals\nreportWebVitals();","map":{"version":3,"names":["React","useEffect","ReactDOM","App","reportWebVitals","Provider","store","login","userProfile","useNavigate","jsxDEV","_jsxDEV","connectInstantly","dispatch","token","localStorage","getItem","renderApp","_s","navigate","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","root","createRoot","document","getElementById","render"],"sources":["/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/index.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/Store/index';\nimport { login, userProfile } from './redux/actions/all.actions';\nimport { useNavigate } from 'react-router-dom'; // Importez useNavigate depuis react-router-dom\n\n// Fonction asynchrone pour effectuer la connexion instantanée\nconst connectInstantly = async () => {\n  // Démarrer l'action userProfile dès le début de l'application\n  store.dispatch(userProfile());\n\n  // Vérifier si le token existe dans le localStorage\n  const token = localStorage.getItem('token');\n  if (token) {\n    // Si le token existe, déclencher l'action de connexion avec ce token\n    store.dispatch(login());\n  }\n};\n\n// Rendu de l'application\nconst renderApp = () => {\n  const navigate = useNavigate(); // Appel de useNavigate à l'intérieur de la fonction de rendu\n\n  useEffect(() => {\n    connectInstantly(); // Appeler la fonction pour effectuer la connexion instantanée\n    // Rediriger vers la page du profil une fois la connexion établie\n    navigate('/profil');\n  }, [navigate]);\n\n  return (\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  );\n};\n\n// Rendu de l'application\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(renderApp());\n\n// Si vous souhaitez mesurer les performances de votre application, vous pouvez utiliser reportWebVitals\nreportWebVitals();\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,aAAa;AAEpB,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AACA,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,KAAK,EAAEC,WAAW,QAAQ,6BAA6B;AAChE,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACnC;EACAN,KAAK,CAACO,QAAQ,CAACL,WAAW,CAAC,CAAC,CAAC;;EAE7B;EACA,MAAMM,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACT;IACAR,KAAK,CAACO,QAAQ,CAACN,KAAK,CAAC,CAAC,CAAC;EACzB;AACF,CAAC;;AAED;AACA,MAAMU,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCR,SAAS,CAAC,MAAM;IACdW,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACpB;IACAO,QAAQ,CAAC,SAAS,CAAC;EACrB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACER,OAAA,CAACX,KAAK,CAACoB,UAAU;IAAAC,QAAA,eACfV,OAAA,CAACN,QAAQ;MAACC,KAAK,EAAEA,KAAM;MAAAe,QAAA,eACrBV,OAAA,CAACR,GAAG;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEvB,CAAC;;AAED;AAAAP,EAAA,CAlBMD,SAAS;EAAA,QACIR,WAAW;AAAA;AAkB9B,MAAMiB,IAAI,GAAGxB,QAAQ,CAACyB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,CAACb,SAAS,CAAC,CAAC,CAAC;;AAExB;AACAb,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}