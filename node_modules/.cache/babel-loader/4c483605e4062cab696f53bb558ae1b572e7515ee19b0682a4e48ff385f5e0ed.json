{"ast":null,"code":"var _jsxFileName = \"/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/pages/ProfilePage/profilePage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importez Redirect depuis react-router-dom\nimport { useSelector } from 'react-redux'; // Importez useSelector depuis react-redux\n\nimport Transaction from '../../components/Transaction/transaction';\nimport EditName from '../../components/EditName/editName';\nimport TransactionData from '../../data/transactionData.json';\nimport './profilePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  // Obtenez l'état de connexion à partir du Redux store\n  const {\n    isConnected\n  } = useSelector(state => state.login);\n  const navigate = useNavigate(); // Initialisez useHistory\n\n  // Vérifiez si l'utilisateur est connecté\n  if (!isConnected) {\n    // Redirigez l'utilisateur vers la page de connexion s'il n'est pas connecté\n    return navigate(\"/login\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main bg-dark\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(EditName, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), TransactionData.map(data =>\n      /*#__PURE__*/\n      /* Return item component */\n      _jsxDEV(Transaction, {\n        title: data.title,\n        amount: data.amount,\n        description: data.description\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfilePage, \"lsVBIXkqu9qh6hhQmHzxi4wls6g=\", false, function () {\n  return [useSelector, useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useNavigate","useSelector","Transaction","EditName","TransactionData","jsxDEV","_jsxDEV","ProfilePage","_s","isConnected","state","login","navigate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","data","title","amount","description","id","_c","$RefreshReg$"],"sources":["/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/pages/ProfilePage/profilePage.jsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importez Redirect depuis react-router-dom\nimport { useSelector } from 'react-redux'; // Importez useSelector depuis react-redux\n\nimport Transaction from '../../components/Transaction/transaction';\nimport EditName from '../../components/EditName/editName';\nimport TransactionData from '../../data/transactionData.json';\nimport './profilePage.css';\n\nfunction ProfilePage() {\n  // Obtenez l'état de connexion à partir du Redux store\n  const { isConnected } = useSelector(state => state.login);\n  const navigate = useNavigate(); // Initialisez useHistory\n\n  // Vérifiez si l'utilisateur est connecté\n  if (!isConnected) {\n    // Redirigez l'utilisateur vers la page de connexion s'il n'est pas connecté\n    return navigate (\"/login\");\n  }\n\n  return (\n    <main className=\"main bg-dark\">\n      <div>\n        <EditName/>\n        {TransactionData.map((data) => (\n            /* Return item component */\n            <Transaction \n              key={data.id}\n              title={data.title}\n              amount={data.amount}\n              description={data.description}\n            />\n        ))}\n      </div>\n    </main>\n  );\n}\n\nexport default ProfilePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,SAASC,WAAW,QAAQ,aAAa,CAAC,CAAC;;AAE3C,OAAOC,WAAW,MAAM,0CAA0C;AAClE,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB;EACA,MAAM;IAAEC;EAAY,CAAC,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,KAAK,CAAC;EACzD,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,IAAI,CAACS,WAAW,EAAE;IAChB;IACA,OAAOG,QAAQ,CAAE,QAAQ,CAAC;EAC5B;EAEA,oBACEN,OAAA;IAAMO,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC5BR,OAAA;MAAAQ,QAAA,gBACER,OAAA,CAACH,QAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACVd,eAAe,CAACe,GAAG,CAAEC,IAAI;MAAA;MACtB;MACAd,OAAA,CAACJ,WAAW;QAEVmB,KAAK,EAAED,IAAI,CAACC,KAAM;QAClBC,MAAM,EAAEF,IAAI,CAACE,MAAO;QACpBC,WAAW,EAAEH,IAAI,CAACG;MAAY,GAHzBH,IAAI,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACV,EAAA,CA3BQD,WAAW;EAAA,QAEMN,WAAW,EAClBD,WAAW;AAAA;AAAAyB,EAAA,GAHrBlB,WAAW;AA6BpB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}