{"ast":null,"code":"var _jsxFileName = \"/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/components/Header/header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../redux/actions/login.actions\"; // Importez l'action de déconnexion\n\nimport Logo from \"../../img/argentBankLogo.png\";\nimport \"./header.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    isConnected\n  } = useSelector(state => state.login); // Obtenez l'état de connexion à partir du Redux store\n  const {\n    userName\n  } = useSelector(state => state.user); // Obtenez l'état de connexion à partir du Redux store\n  const [isUserConnected, setIsUserConnected] = useState(false);\n  const handleLogout = () => {\n    dispatch(logout()); // Déclenchez l'action de déconnexion lorsque l'utilisateur clique sur le bouton \"Logout\"\n    localStorage.removeItem(\"token\");\n  };\n  useEffect(() => {\n    // Met à jour l'état de connexion local lorsque l'état de connexion du Redux store change\n    setIsUserConnected(isConnected);\n  }, [isConnected]);\n\n  /*useEffect(() => {\n    if (isConnected) {\n      setIsUserConnected(true);\n    } else {\n      setIsUserConnected(false);\n    }\n  }, [isConnected, setIsUserConnected]);*/\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"Bank Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"not-connected\",\n        children: isUserConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-circle-user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/profil\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-sign-out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            onClick: handleLogout,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"JFo6HuaKrGlQB5sLvji6xu+LweM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","Link","useDispatch","useSelector","logout","Logo","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","dispatch","isConnected","state","login","userName","user","isUserConnected","setIsUserConnected","handleLogout","localStorage","removeItem","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/components/Header/header.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../../redux/actions/login.actions\"; // Importez l'action de déconnexion\n\nimport Logo from \"../../img/argentBankLogo.png\";\n\nimport \"./header.css\";\n\nfunction Header() {\n  const dispatch = useDispatch();\n  const { isConnected } = useSelector((state) => state.login); // Obtenez l'état de connexion à partir du Redux store\n  const { userName } = useSelector((state) => state.user); // Obtenez l'état de connexion à partir du Redux store\n  const [isUserConnected, setIsUserConnected] = useState(false);\n  const handleLogout = () => {\n    dispatch(logout()); // Déclenchez l'action de déconnexion lorsque l'utilisateur clique sur le bouton \"Logout\"\n    localStorage.removeItem(\"token\");\n  };\n  useEffect(() => {\n    // Met à jour l'état de connexion local lorsque l'état de connexion du Redux store change\n    setIsUserConnected(isConnected);\n  }, [isConnected]);\n\n  /*useEffect(() => {\n    if (isConnected) {\n      setIsUserConnected(true);\n    } else {\n      setIsUserConnected(false);\n    }\n  }, [isConnected, setIsUserConnected]);*/\n\n  return (\n    <header>\n      <nav>\n        <Link to=\"/\">\n          <img src={Logo} alt=\"Bank Logo\" />\n        </Link>\n        <div className=\"not-connected\">\n          {/* Changez le texte du bouton en fonction de l'état de connexion */}\n          {isUserConnected ? (\n            <>\n              <i className=\"fa-solid fa-circle-user\"></i>\n              <Link to=\"/profil\">\n                <p>{userName}</p>\n              </Link>\n              <i className=\"fa fa-sign-out\"></i>\n              <Link onClick={handleLogout}>\n                <p>Logout</p>\n              </Link>\n            </>\n          ) : (\n            <>\n              <Link to=\"/login\">\n                <p>Sign In</p>\n              </Link>\n            </>\n          )}\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}