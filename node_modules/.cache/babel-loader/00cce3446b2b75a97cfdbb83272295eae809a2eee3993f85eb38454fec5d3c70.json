{"ast":null,"code":"import axios from 'axios';\n\n//SIGN IN\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\n//user profile\nexport const GET_USERPROFILE = \"GET_USERPROFILE\";\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS';\nexport const USER_PROFILE_FAIL = 'USER_PROFILE_FAIL';\nexport const USER_PROFILE_RESET = 'USER_PROFILE_RESET';\nexport const USER_PROFILE_UPDATE = 'USER_PROFILE_UPDATE';\n\n/* Authentication actions */\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    const response = await axios.post('http://localhost:3001/api/v1/user/login', {\n      email,\n      password\n    });\n    const token = response.data.body.token;\n    console.log(response);\n\n    // Stocker le token dans le local storage\n    localStorage.setItem('token', token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: token\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const logout = () => {\n  return {\n    type: LOGOUT\n  };\n};\n\n// User's profile action\nexport const userProfile = () => async dispatch => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No token found'); // Lance une erreur si aucun token n'est trouvé\n    }\n    const response = await axios.post('http://localhost:3001/api/v1/user/profile', null,\n    // Utilise null comme corps de la requête\n    {\n      headers: {\n        Authorization: `Bearer ${token}` // Utilise le token récupéré depuis le local storage\n      }\n    });\n    const data = await response.data;\n    console.log(data);\n    dispatch({\n      type: USER_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n/* Username update action */\nexport const updateUsername = username => {\n  return {\n    type: USER_PROFILE_UPDATE,\n    payload: username\n  };\n};","map":{"version":3,"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_USERPROFILE","USER_PROFILE_SUCCESS","USER_PROFILE_FAIL","USER_PROFILE_RESET","USER_PROFILE_UPDATE","login","email","password","dispatch","response","post","token","data","body","console","log","localStorage","setItem","type","payload","error","message","logout","userProfile","getItem","Error","headers","Authorization","updateUsername","username"],"sources":["/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/redux/actions/login.actions.js"],"sourcesContent":["import axios from 'axios';\n\n\n//SIGN IN\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\n//user profile\nexport const GET_USERPROFILE = \"GET_USERPROFILE\"\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS'\nexport const USER_PROFILE_FAIL = 'USER_PROFILE_FAIL'\nexport const USER_PROFILE_RESET = 'USER_PROFILE_RESET'\nexport const USER_PROFILE_UPDATE = 'USER_PROFILE_UPDATE'\n\n\n\n/* Authentication actions */\n\nexport const login = (email, password) => async (dispatch) => {\n  \n    try {\n      const response = await axios.post('http://localhost:3001/api/v1/user/login', { email, password });\n      const token = response.data.body.token;\n      console.log(response)\n\n       // Stocker le token dans le local storage\n       localStorage.setItem('token',token);\n\n      dispatch({ type: LOGIN_SUCCESS, payload: token });\n    } catch (error) {\n        \n      dispatch({ type: LOGIN_FAIL, payload: error.response.data.message });\n    }\n  };\n  \n  export const logout = () => {\n    return {\n      type: LOGOUT,\n    };\n  };\n\n// User's profile action\nexport const userProfile = () => async (dispatch) => {\n  try {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      throw new Error('No token found'); // Lance une erreur si aucun token n'est trouvé\n    }\n\n    const response = await axios.post(\n      'http://localhost:3001/api/v1/user/profile',\n      null, // Utilise null comme corps de la requête\n      {\n        headers: {\n          Authorization: `Bearer ${token}`, // Utilise le token récupéré depuis le local storage\n        },\n      }\n    );\n\n    const data = await response.data;\n    console.log(data);\n    dispatch({ type: USER_PROFILE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n\n\n/* Username update action */\nexport const updateUsername = (username) => {\n    return {\n        type: USER_PROFILE_UPDATE,\n        payload: username,\n    };\n};\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAGzB;AACA,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,MAAM,GAAG,QAAQ;;AAE9B;AACA,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAChD,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,kBAAkB,GAAG,oBAAoB;AACtD,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;;AAIxD;;AAEA,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAE1D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,yCAAyC,EAAE;MAAEJ,KAAK;MAAEC;IAAS,CAAC,CAAC;IACjG,MAAMI,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACC,IAAI,CAACF,KAAK;IACtCG,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;;IAEpB;IACAO,YAAY,CAACC,OAAO,CAAC,OAAO,EAACN,KAAK,CAAC;IAEpCH,QAAQ,CAAC;MAAEU,IAAI,EAAErB,aAAa;MAAEsB,OAAO,EAAER;IAAM,CAAC,CAAC;EACnD,CAAC,CAAC,OAAOS,KAAK,EAAE;IAEdZ,QAAQ,CAAC;MAAEU,IAAI,EAAEpB,UAAU;MAAEqB,OAAO,EAAEC,KAAK,CAACX,QAAQ,CAACG,IAAI,CAACS;IAAQ,CAAC,CAAC;EACtE;AACF,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAC1B,OAAO;IACLJ,IAAI,EAAEnB;EACR,CAAC;AACH,CAAC;;AAEH;AACA,OAAO,MAAMwB,WAAW,GAAGA,CAAA,KAAM,MAAOf,QAAQ,IAAK;EACnD,IAAI;IACF,MAAMG,KAAK,GAAGK,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACb,KAAK,EAAE;MACV,MAAM,IAAIc,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACrC;IAEA,MAAMhB,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC/B,2CAA2C,EAC3C,IAAI;IAAE;IACN;MACEgB,OAAO,EAAE;QACPC,aAAa,EAAG,UAAShB,KAAM,EAAC,CAAE;MACpC;IACF,CACF,CAAC;IAED,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI;IAChCE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBJ,QAAQ,CAAC;MAAEU,IAAI,EAAEjB,oBAAoB;MAAEkB,OAAO,EAAEP;IAAK,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdZ,QAAQ,CAAC;MACPU,IAAI,EAAEhB,iBAAiB;MACvBiB,OAAO,EACLC,KAAK,CAACX,QAAQ,IAAIW,KAAK,CAACX,QAAQ,CAACG,IAAI,CAACS,OAAO,GACzCD,KAAK,CAACX,QAAQ,CAACG,IAAI,CAACS,OAAO,GAC3BD,KAAK,CAACC;IACd,CAAC,CAAC;EACJ;AACF,CAAC;;AAID;AACA,OAAO,MAAMO,cAAc,GAAIC,QAAQ,IAAK;EACxC,OAAO;IACHX,IAAI,EAAEd,mBAAmB;IACzBe,OAAO,EAAEU;EACb,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}