{"ast":null,"code":"var _jsxFileName = \"/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/pages/ProfilePage/profilePage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importez Redirect depuis react-router-dom\nimport { useSelector } from 'react-redux'; // Importez useSelector depuis react-redux\n\nimport Transaction from '../../components/Transaction/transaction';\nimport EditName from '../../components/EditName/editName';\nimport TransactionData from '../../data/transactionData.json';\nimport './profilePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  // Obtenez l'état de connexion à partir du Redux store\n  const {\n    isConnected\n  } = useSelector(state => state.login);\n  const navigate = useNavigate(); // Initialisez useHistory\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main bg-dark\",\n    children: isConnected ?\n    /*#__PURE__*/\n    // Vérifiez si l'utilisateur est connecté\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(EditName, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), TransactionData.map(data =>\n      /*#__PURE__*/\n      /* Rendu des transactions */\n      _jsxDEV(Transaction, {\n        title: data.title,\n        amount: data.amount,\n        description: data.description\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Veuillez vous connecter pour acc\\xE9der \\xE0 cette page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfilePage, \"lsVBIXkqu9qh6hhQmHzxi4wls6g=\", false, function () {\n  return [useSelector, useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useNavigate","useSelector","Transaction","EditName","TransactionData","jsxDEV","_jsxDEV","ProfilePage","_s","isConnected","state","login","navigate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","data","title","amount","description","id","_c","$RefreshReg$"],"sources":["/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/pages/ProfilePage/profilePage.jsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importez Redirect depuis react-router-dom\nimport { useSelector } from 'react-redux'; // Importez useSelector depuis react-redux\n\nimport Transaction from '../../components/Transaction/transaction';\nimport EditName from '../../components/EditName/editName';\nimport TransactionData from '../../data/transactionData.json';\nimport './profilePage.css';\n\nfunction ProfilePage() {\n  // Obtenez l'état de connexion à partir du Redux store\n  const { isConnected } = useSelector(state => state.login);\n  const navigate = useNavigate(); // Initialisez useHistory\n\n \n  return (\n    <main className=\"main bg-dark\">\n      {isConnected ? ( // Vérifiez si l'utilisateur est connecté\n        <div>\n          <EditName />\n          {TransactionData.map((data) => (\n            /* Rendu des transactions */\n            <Transaction\n              key={data.id}\n              title={data.title}\n              amount={data.amount}\n              description={data.description}\n            />\n          ))}\n        </div>\n      ) : (\n        <h1>Veuillez vous connecter pour accéder à cette page.</h1>\n      )}\n    </main>\n  );\n}\n\nexport default ProfilePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,SAASC,WAAW,QAAQ,aAAa,CAAC,CAAC;;AAE3C,OAAOC,WAAW,MAAM,0CAA0C;AAClE,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB;EACA,MAAM;IAAEC;EAAY,CAAC,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,KAAK,CAAC;EACzD,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC,CAAC,CAAC;;EAGhC,oBACEM,OAAA;IAAMO,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC3BL,WAAW;IAAA;IAAK;IACfH,OAAA;MAAAQ,QAAA,gBACER,OAAA,CAACH,QAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACXd,eAAe,CAACe,GAAG,CAAEC,IAAI;MAAA;MACxB;MACAd,OAAA,CAACJ,WAAW;QAEVmB,KAAK,EAAED,IAAI,CAACC,KAAM;QAClBC,MAAM,EAAEF,IAAI,CAACE,MAAO;QACpBC,WAAW,EAAEH,IAAI,CAACG;MAAY,GAHzBH,IAAI,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENZ,OAAA;MAAAQ,QAAA,EAAI;IAAkD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAC3D;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX;AAACV,EAAA,CA1BQD,WAAW;EAAA,QAEMN,WAAW,EAClBD,WAAW;AAAA;AAAAyB,EAAA,GAHrBlB,WAAW;AA4BpB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}