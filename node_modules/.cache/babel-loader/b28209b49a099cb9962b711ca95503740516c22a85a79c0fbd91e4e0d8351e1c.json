{"ast":null,"code":"var _jsxFileName = \"/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/index.js\";\n// index.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client'; // Importez createRoot depuis react-dom/client\nimport { useNavigate } from 'react-router-dom'; // Importez useNavigate pour la redirection\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/Store/index';\nimport { login, userProfile } from './redux/actions/all.actions'; // Importez l'action login et userProfile\n\n// Lancez également l'action userProfile au démarrage de l'application\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nstore.dispatch(userProfile());\n\n// Récupérez l'e-mail et le mot de passe du localStorage\nconst email = localStorage.getItem('email');\nconst password = localStorage.getItem('password');\nconst navigate = useNavigate(); // Initialisez useNavigate pour la redirection\n\n// Si l'e-mail et le mot de passe sont présents, appelez l'action login\nif (email && password) {\n  // Appelez l'action login avec les paramètres email et password\n  store.dispatch(login(email, password)).then(() => {\n    // Redirigez l'utilisateur vers la page de profil après la connexion réussie\n    navigate('/profil');\n  }).catch(error => {\n    console.error('Failed to login:', error);\n  });\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 3\n}, this));\n\n// Mesurez les performances de votre application\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","useNavigate","App","reportWebVitals","Provider","store","login","userProfile","jsxDEV","_jsxDEV","dispatch","email","localStorage","getItem","password","navigate","then","catch","error","console","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/index.js"],"sourcesContent":["// index.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client'; // Importez createRoot depuis react-dom/client\nimport { useNavigate } from 'react-router-dom'; // Importez useNavigate pour la redirection\nimport App from './App';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/Store/index';\nimport { login, userProfile } from './redux/actions/all.actions'; // Importez l'action login et userProfile\n\n\n\n// Lancez également l'action userProfile au démarrage de l'application\nstore.dispatch(userProfile());\n\n// Récupérez l'e-mail et le mot de passe du localStorage\nconst email = localStorage.getItem('email');\nconst password = localStorage.getItem('password');\nconst navigate = useNavigate(); // Initialisez useNavigate pour la redirection\n\n// Si l'e-mail et le mot de passe sont présents, appelez l'action login\nif (email && password) {\n  // Appelez l'action login avec les paramètres email et password\n  store.dispatch(login(email, password))\n    .then(() => {\n      // Redirigez l'utilisateur vers la page de profil après la connexion réussie\n      navigate('/profil');\n    })\n    .catch((error) => {\n      console.error('Failed to login:', error);\n    });\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// Mesurez les performances de votre application\nreportWebVitals();\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB,CAAC,CAAC;AACzC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,aAAa;AAEpB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,KAAK,EAAEC,WAAW,QAAQ,6BAA6B,CAAC,CAAC;;AAIlE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAJ,KAAK,CAACK,QAAQ,CAACH,WAAW,CAAC,CAAC,CAAC;;AAE7B;AACA,MAAMI,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAC3C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;AACjD,MAAME,QAAQ,GAAGd,WAAW,CAAC,CAAC,CAAC,CAAC;;AAEhC;AACA,IAAIU,KAAK,IAAIG,QAAQ,EAAE;EACrB;EACAT,KAAK,CAACK,QAAQ,CAACJ,KAAK,CAACK,KAAK,EAAEG,QAAQ,CAAC,CAAC,CACnCE,IAAI,CAAC,MAAM;IACV;IACAD,QAAQ,CAAC,SAAS,CAAC;EACrB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;EAC1C,CAAC,CAAC;AACN;AAEA,MAAME,IAAI,GAAGpB,QAAQ,CAACqB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTf,OAAA,CAACV,KAAK,CAAC0B,UAAU;EAAAC,QAAA,eACfjB,OAAA,CAACL,QAAQ;IAACC,KAAK,EAAEA,KAAM;IAAAqB,QAAA,eACrBjB,OAAA,CAACP,GAAG;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACK,CACpB,CAAC;;AAED;AACA3B,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}