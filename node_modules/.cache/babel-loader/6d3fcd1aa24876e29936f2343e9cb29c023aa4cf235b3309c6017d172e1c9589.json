{"ast":null,"code":"var _jsxFileName = \"/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/pages/ProfilePage/profilePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom'; // Importer Redirect pour la redirection\nimport Transaction from '../../components/Transaction/transaction';\nimport EditName from '../../components/EditName/editName';\nimport TransactionData from '../../data/transactionData.json';\nimport { login } from '../../redux/actions/login.actions'; // Importer l'action de connexion\nimport './profilePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    isConnected\n  } = useSelector(state => state.login); // Obtenir l'état de connexion à partir du Redux store\n\n  // Vérifier la connexion lorsque le composant est monté\n  useEffect(() => {\n    // Si l'utilisateur n'est pas connecté, dispatchez l'action de connexion pour vérifier\n    if (!isConnected) {\n      dispatch(login('email', 'password')); // Remplacez 'email' et 'password' par les informations de connexion réelles\n    }\n  }, [dispatch, isConnected]);\n\n  // Si l'utilisateur n'est pas connecté, redirigez-le vers la page de connexion\n  if (!isConnected) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main bg-dark\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(EditName, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), TransactionData.map(data =>\n      /*#__PURE__*/\n      /* Return item component */\n      _jsxDEV(Transaction, {\n        title: data.title,\n        amount: data.amount,\n        description: data.description\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfilePage, \"db8Jr4SMkQqxppBfi79KEOni+/0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Redirect","Transaction","EditName","TransactionData","login","jsxDEV","_jsxDEV","ProfilePage","_s","dispatch","isConnected","state","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","data","title","amount","description","id","_c","$RefreshReg$"],"sources":["/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/pages/ProfilePage/profilePage.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom'; // Importer Redirect pour la redirection\nimport Transaction from '../../components/Transaction/transaction';\nimport EditName from '../../components/EditName/editName';\nimport TransactionData from '../../data/transactionData.json';\nimport { login } from '../../redux/actions/login.actions'; // Importer l'action de connexion\nimport './profilePage.css'\n\nfunction ProfilePage() {\n  const dispatch = useDispatch();\n  const { isConnected } = useSelector(state => state.login); // Obtenir l'état de connexion à partir du Redux store\n\n  // Vérifier la connexion lorsque le composant est monté\n  useEffect(() => {\n    // Si l'utilisateur n'est pas connecté, dispatchez l'action de connexion pour vérifier\n    if (!isConnected) {\n      dispatch(login('email', 'password')); // Remplacez 'email' et 'password' par les informations de connexion réelles\n    }\n  }, [dispatch, isConnected]);\n\n  // Si l'utilisateur n'est pas connecté, redirigez-le vers la page de connexion\n  if (!isConnected) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <main className=\"main bg-dark\">\n      <div>\n        <EditName/>\n        {TransactionData.map((data) => (\n          /* Return item component */\n          <Transaction \n            key={data.id}\n            title={data.title}\n            amount={data.amount}\n            description={data.description}\n          />\n        ))}\n      </div>\n    </main>\n  )\n}\n\nexport default ProfilePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;AAC7C,OAAOC,WAAW,MAAM,0CAA0C;AAClE,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,SAASC,KAAK,QAAQ,mCAAmC,CAAC,CAAC;AAC3D,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY;EAAY,CAAC,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACP,KAAK,CAAC,CAAC,CAAC;;EAE3D;EACAP,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACa,WAAW,EAAE;MAChBD,QAAQ,CAACL,KAAK,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,CAACK,QAAQ,EAAEC,WAAW,CAAC,CAAC;;EAE3B;EACA,IAAI,CAACA,WAAW,EAAE;IAChB,oBAAOJ,OAAA,CAACN,QAAQ;MAACY,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,oBACEV,OAAA;IAAMW,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC5BZ,OAAA;MAAAY,QAAA,gBACEZ,OAAA,CAACJ,QAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACVb,eAAe,CAACgB,GAAG,CAAEC,IAAI;MAAA;MACxB;MACAd,OAAA,CAACL,WAAW;QAEVoB,KAAK,EAAED,IAAI,CAACC,KAAM;QAClBC,MAAM,EAAEF,IAAI,CAACE,MAAO;QACpBC,WAAW,EAAEH,IAAI,CAACG;MAAY,GAHzBH,IAAI,CAACI,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACR,EAAA,CAjCQD,WAAW;EAAA,QACDT,WAAW,EACJC,WAAW;AAAA;AAAA0B,EAAA,GAF5BlB,WAAW;AAmCpB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}