{"ast":null,"code":"// login.reducer.js\n\nimport { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SHOW_LOGIN_ERROR_MESSAGE } from \"../actions/all.actions\";\nconst isToken = localStorage.getItem('token') || null;\nconst connected = localStorage.getItem('token') ? true : false;\nconst initialState = {\n  isConnected: connected,\n  token: isToken,\n  error: null,\n  displayLoginErrorMessage: false // Ajout de la propriété pour contrôler l'affichage du message d'erreur de connexion\n};\nexport default function loginReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isConnected: true,\n        token: action.payload,\n        error: null,\n        displayLoginErrorMessage: false // Réinitialisation de l'affichage du message d'erreur de connexion\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isConnected: false,\n        error: action.payload,\n        displayLoginErrorMessage: true // Affichage du message d'erreur de connexion\n      };\n    case LOGOUT:\n      return initialState;\n    case SHOW_LOGIN_ERROR_MESSAGE:\n      return {\n        ...state,\n        displayLoginErrorMessage: true // Affichage du message d'erreur de connexion\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SHOW_LOGIN_ERROR_MESSAGE","isToken","localStorage","getItem","connected","initialState","isConnected","token","error","displayLoginErrorMessage","loginReducer","state","action","type","payload"],"sources":["/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/redux/reducers/login.reducer.js"],"sourcesContent":["// login.reducer.js\n\nimport { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SHOW_LOGIN_ERROR_MESSAGE } from \"../actions/all.actions\";\nconst isToken = localStorage.getItem('token') || null;\nconst connected = localStorage.getItem('token') ? true : false;\n\nconst initialState = {\n  isConnected: connected,\n  token: isToken,\n  error: null,\n  displayLoginErrorMessage: false, // Ajout de la propriété pour contrôler l'affichage du message d'erreur de connexion\n};\n\nexport default function loginReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isConnected: true,\n        token: action.payload,\n        error: null,\n        displayLoginErrorMessage: false, // Réinitialisation de l'affichage du message d'erreur de connexion\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isConnected: false,\n        error: action.payload,\n        displayLoginErrorMessage: true, // Affichage du message d'erreur de connexion\n      };\n    case LOGOUT:\n      return initialState;\n    case SHOW_LOGIN_ERROR_MESSAGE:\n      return {\n        ...state,\n        displayLoginErrorMessage: true, // Affichage du message d'erreur de connexion\n      };\n    default:\n      return state;\n  }\n}\n\n\n"],"mappings":"AAAA;;AAEA,SAASA,aAAa,EAAEC,UAAU,EAAEC,MAAM,EAAEC,wBAAwB,QAAQ,wBAAwB;AACpG,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;AACrD,MAAMC,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,KAAK;AAE9D,MAAME,YAAY,GAAG;EACnBC,WAAW,EAAEF,SAAS;EACtBG,KAAK,EAAEN,OAAO;EACdO,KAAK,EAAE,IAAI;EACXC,wBAAwB,EAAE,KAAK,CAAE;AACnC,CAAC;AAED,eAAe,SAASC,YAAYA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,EAAE;EACjE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKhB,aAAa;MAChB,OAAO;QACL,GAAGc,KAAK;QACRL,WAAW,EAAE,IAAI;QACjBC,KAAK,EAAEK,MAAM,CAACE,OAAO;QACrBN,KAAK,EAAE,IAAI;QACXC,wBAAwB,EAAE,KAAK,CAAE;MACnC,CAAC;IACH,KAAKX,UAAU;MACb,OAAO;QACL,GAAGa,KAAK;QACRL,WAAW,EAAE,KAAK;QAClBE,KAAK,EAAEI,MAAM,CAACE,OAAO;QACrBL,wBAAwB,EAAE,IAAI,CAAE;MAClC,CAAC;IACH,KAAKV,MAAM;MACT,OAAOM,YAAY;IACrB,KAAKL,wBAAwB;MAC3B,OAAO;QACL,GAAGW,KAAK;QACRF,wBAAwB,EAAE,IAAI,CAAE;MAClC,CAAC;IACH;MACE,OAAOE,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}