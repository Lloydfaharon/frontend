{"ast":null,"code":"// axiosConfig.js\n\n//import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:3001/api/v1' // Définissez votre URL de base ici\n});\n\n// Ajoutez un intercepteur pour ajouter le token d'authentification à chaque requête sortante\naxiosInstance.interceptors.request.use(config => {\n  const token = sessionStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axiosInstance","axios","create","baseURL","interceptors","request","use","config","token","sessionStorage","getItem","headers","Authorization","error","Promise","reject"],"sources":["/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/redux/utilitaire/axiosConfig.js"],"sourcesContent":["// axiosConfig.js\n\n//import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:3001/api/v1', // Définissez votre URL de base ici\n});\n\n// Ajoutez un intercepteur pour ajouter le token d'authentification à chaque requête sortante\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = sessionStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n"],"mappings":"AAAA;;AAEA;;AAEA,MAAMA,aAAa,GAAGC,KAAK,CAACC,MAAM,CAAC;EACjCC,OAAO,EAAE,8BAA8B,CAAE;AAC3C,CAAC,CAAC;;AAEF;AACAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAI,UAASJ,KAAM,EAAC;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}