{"ast":null,"code":"import { GET_USERPROFILE, USER_PROFILE_SUCCESS, USER_PROFILE_UPDATE, USER_PROFILE_FAIL, USER_PROFILE_RESET } from \"../actions/login.actions\";\n\n/* Initial user state */\nconst initialState = {\n  status: \"VOID\",\n  isConnected: false,\n  userData: {},\n  firstName: \"\",\n  lastName: \"\"\n};\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_USERPROFILE:\n      return {\n        ...state,\n        isConnected: true,\n        status: \"SUCCEEDED\",\n        userData: action.payload\n      };\n    case USER_PROFILE_SUCCESS:\n      return {\n        ...state,\n        firstName: action.payload.body.firstName,\n        lastName: action.payload.body.lastName,\n        status: \"SUCCEEDED\",\n        // Assure-toi de conserver le statut de connexion\n        isConnected: true,\n        userData: action.payload // Tu peux conserver les autres données utilisateur si nécessaire\n      };\n    case USER_PROFILE_UPDATE:\n      return {\n        ...state,\n        success: true,\n        // Peut-être que tu voulais inclure cela dans `userData` ?\n        firstName: action.payload.body.firstName,\n        lastName: action.payload.body.lastName\n        // Assure-toi de conserver les autres champs de userData si nécessaire\n      };\n    case USER_PROFILE_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n        status: \"FAILED\" // Tu pourrais ajouter une indication d'échec de la requête\n      };\n    case USER_PROFILE_RESET:\n      return {\n        firstName: null,\n        lastName: null\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_USERPROFILE","USER_PROFILE_SUCCESS","USER_PROFILE_UPDATE","USER_PROFILE_FAIL","USER_PROFILE_RESET","initialState","status","isConnected","userData","firstName","lastName","userReducer","state","action","type","payload","body","success","error"],"sources":["/Users/rineralexandre/Desktop/ArgentBankLloyd/frontend/src/redux/reducers/user.reducer.js"],"sourcesContent":["import {\n  GET_USERPROFILE,\n  USER_PROFILE_SUCCESS,\n  USER_PROFILE_UPDATE,\n  USER_PROFILE_FAIL,\n  USER_PROFILE_RESET,\n} from \"../actions/login.actions\";\n\n/* Initial user state */\nconst initialState = {\n  status: \"VOID\",\n  isConnected: false,\n  userData: {},\n  firstName: \"\",\n  lastName: \"\",\n};\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_USERPROFILE:\n      return {\n        ...state,\n        isConnected: true,\n        status: \"SUCCEEDED\",\n        userData: action.payload,\n      };\n    case USER_PROFILE_SUCCESS:\n      return {\n        ...state,\n        firstName: action.payload.body.firstName,\n        lastName: action.payload.body.lastName,\n        status: \"SUCCEEDED\", // Assure-toi de conserver le statut de connexion\n        isConnected: true,\n        userData: action.payload, // Tu peux conserver les autres données utilisateur si nécessaire\n      };\n\n    case USER_PROFILE_UPDATE:\n      return {\n        ...state,\n        success: true, // Peut-être que tu voulais inclure cela dans `userData` ?\n        firstName: action.payload.body.firstName,\n        lastName: action.payload.body.lastName,\n        // Assure-toi de conserver les autres champs de userData si nécessaire\n      };\n\n    case USER_PROFILE_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n        status: \"FAILED\", // Tu pourrais ajouter une indication d'échec de la requête\n      };\n\n    case USER_PROFILE_RESET:\n      return {\n        firstName: null,\n        lastName: null,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,SACEA,eAAe,EACfC,oBAAoB,EACpBC,mBAAmB,EACnBC,iBAAiB,EACjBC,kBAAkB,QACb,0BAA0B;;AAEjC;AACA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,MAAM;EACdC,WAAW,EAAE,KAAK;EAClBC,QAAQ,EAAE,CAAC,CAAC;EACZC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE;AACZ,CAAC;AAED,eAAe,SAASC,WAAWA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,EAAE;EAChE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKd,eAAe;MAClB,OAAO;QACL,GAAGY,KAAK;QACRL,WAAW,EAAE,IAAI;QACjBD,MAAM,EAAE,WAAW;QACnBE,QAAQ,EAAEK,MAAM,CAACE;MACnB,CAAC;IACH,KAAKd,oBAAoB;MACvB,OAAO;QACL,GAAGW,KAAK;QACRH,SAAS,EAAEI,MAAM,CAACE,OAAO,CAACC,IAAI,CAACP,SAAS;QACxCC,QAAQ,EAAEG,MAAM,CAACE,OAAO,CAACC,IAAI,CAACN,QAAQ;QACtCJ,MAAM,EAAE,WAAW;QAAE;QACrBC,WAAW,EAAE,IAAI;QACjBC,QAAQ,EAAEK,MAAM,CAACE,OAAO,CAAE;MAC5B,CAAC;IAEH,KAAKb,mBAAmB;MACtB,OAAO;QACL,GAAGU,KAAK;QACRK,OAAO,EAAE,IAAI;QAAE;QACfR,SAAS,EAAEI,MAAM,CAACE,OAAO,CAACC,IAAI,CAACP,SAAS;QACxCC,QAAQ,EAAEG,MAAM,CAACE,OAAO,CAACC,IAAI,CAACN;QAC9B;MACF,CAAC;IAEH,KAAKP,iBAAiB;MACpB,OAAO;QACL,GAAGS,KAAK;QACRM,KAAK,EAAEL,MAAM,CAACE,OAAO;QACrBT,MAAM,EAAE,QAAQ,CAAE;MACpB,CAAC;IAEH,KAAKF,kBAAkB;MACrB,OAAO;QACLK,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAE;MACZ,CAAC;IACH;MACE,OAAOE,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}